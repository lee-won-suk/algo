
x=int(input())
#앞서 계산된 결과를 저장하기 위해 dp 테이블 초기화
d=[0]*30001

# 바텀업 방식
for i in range(2,x+1):#1부터 사용하기 위해서 시작값을 2로 한다.
    d[i]=d[i-1]+1#이경우는 현재 수에서 1을 뺏을때의 경우이다.
    #각 해당수로 나누는 경우는 그수로 나누어떨어져야 사용 가능하므로
    #해당수로 나누기 vs 1을빼는 경우중 더 적은수로 1을 구하는 횟수를 찾는다.

    if i%2==0:
        d[i]=min(d[i] , d[i//2]+1)
        #현재수에서 1을 뺏을때의 경우의 수를 더한 1만들기 횟수와
        #현재수를 2로 나누었을 때의 경우의 수를 더한 1만들기 횟수중 작은값을 찾는다.
        # 이과정에서 둘중에 더 적은 횟수로 1을 만들 수 있을지 정해진다.
    elif i % 3 == 0:
        d[i] = min(d[i], d[i // 3] + 1)
    elif i % 5 == 0:
        d[i] = min(d[i], d[i // 5] + 1)

print(d[x])

'''
이 문제는 1을 빼는 경우와 해당 수로 나누는 경우를 비교해서 더 작은 횟수를 
1부터 차례로 dp 테이블에 저장시킨다. 그 후  큰수의 횟수값을 구할 때
작은 수의 횟수값을 dp테이블에서 찾아서 편하게 구한다.
바텀업 방식을 사용한다.
'''